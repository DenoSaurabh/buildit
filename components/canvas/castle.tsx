/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useRouter } from 'next/router'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import PortalBox from '../portalBox'
import BillBoard from '../billboard'

type GLTFResult = GLTF & {
  nodes: {
    castle_voxel_save_white_export_1: THREE.Mesh
    castle_voxel_save_white_export_2: THREE.Mesh
  }
  materials: {
    ['castle_voxel_save_white_export #249']: THREE.MeshBasicMaterial
    ['castle_voxel_save_white_export #242']: THREE.MeshBasicMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const castleRef = useRef<THREE.Mesh>()

  const { nodes, materials } = useGLTF(
    'models/castle-compressed.glb'
  ) as GLTFResult

  const onPortalClick = () => {
    if (!window) return
    location.href = '/play'
  }

  return (
    <group ref={group} {...props} dispose={null} name='world'>
      <group position={[0, 1.38, 0]} name='world'>
        <mesh
          ref={castleRef}
          geometry={nodes.castle_voxel_save_white_export_1.geometry}
          material={materials['castle_voxel_save_white_export #249']}
          name='castle'
        />
        <mesh
          geometry={nodes.castle_voxel_save_white_export_2.geometry}
          material={materials['castle_voxel_save_white_export #242']}
          name='castle'
        />
      </group>

      <BillBoard position={[0, 50, -45]}>
        Teleport to the realm
        <br />
        Click on the door
      </BillBoard>

      <PortalBox
        onClickHandler={onPortalClick}
        scale={[10, 40, 10]}
        position={[0, 20, -45]}
      />
    </group>
  )
}

// useGLTF.preload('models/castle-compressed.glb')
