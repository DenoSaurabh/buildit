/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

// import * as THREE from 'three'
// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei'
// import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

// type GLTFResult = GLTF & {
//   nodes: {
//     ['world_export-11']: THREE.Mesh
//   }
//   materials: {
//     ['world_export-11 #1']: THREE.MeshStandardMaterial
//   }
// }

// export default function UserTopLeft(props: JSX.IntrinsicElements['group']) {
//   const group = useRef<THREE.Group>()
//   const { nodes, materials } = useGLTF('models/world/user/user_top_left.glb') as GLTFResult
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <mesh
//         geometry={nodes['world_export-11'].geometry}
//         material={materials['world_export-11 #1']}
//         position={[58.56, 0, 402.5]}
//         rotation={[-Math.PI, 0, -Math.PI]}
//       />
//     </group>
//   )
// }

// useGLTF.preload('models/world/user/user_top_left.glb')

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    ['user-upload-bridge_1']: THREE.Mesh
    ['user-upload-bridge_2']: THREE.Mesh
  }
  materials: {
    ['user-upload-bridge #249']: THREE.MeshBasicMaterial
    ['user-upload-bridge #242']: THREE.MeshBasicMaterial
  }
}

export default function NFtUploadBridge(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(
    'models/world/user/upload_bridge.glb'
  ) as GLTFResult
  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      position={[59, 0, 401]}
      rotation={[-Math.PI, 0, -Math.PI]}
      name="user-bridge-end"
    >
        <mesh
          geometry={nodes['user-upload-bridge_1'].geometry}
          material={materials['user-upload-bridge #249']}
        />
        <mesh
          geometry={nodes['user-upload-bridge_2'].geometry}
          material={materials['user-upload-bridge #242']}
        />
    </group>
  )
}

useGLTF.preload('models/world/user/upload_bridge.glb')
