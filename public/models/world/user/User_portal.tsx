/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    bridge_portal_1: THREE.Mesh
    bridge_portal_2: THREE.Mesh
    bridge_portal_3: THREE.Mesh
  }
  materials: {
    ['bridge_portal #249']: THREE.MeshBasicMaterial
    ['bridge_portal #250']: THREE.MeshBasicMaterial
    ['bridge_portal #242']: THREE.MeshBasicMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/user_portal.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.bridge_portal_1.geometry} material={materials['bridge_portal #249']} />
      <mesh geometry={nodes.bridge_portal_2.geometry} material={materials['bridge_portal #250']} />
      <mesh geometry={nodes.bridge_portal_3.geometry} material={materials['bridge_portal #242']} />
    </group>
  )
}

useGLTF.preload('/user_portal.glb')
