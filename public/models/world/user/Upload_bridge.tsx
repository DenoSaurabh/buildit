/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    ['user-upload-bridge_1']: THREE.Mesh
    ['user-upload-bridge_2']: THREE.Mesh
  }
  materials: {
    ['user-upload-bridge #249']: THREE.MeshBasicMaterial
    ['user-upload-bridge #242']: THREE.MeshBasicMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/upload_bridge.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 83.15, 0]}>
        <mesh geometry={nodes['user-upload-bridge_1'].geometry} material={materials['user-upload-bridge #249']} />
        <mesh geometry={nodes['user-upload-bridge_2'].geometry} material={materials['user-upload-bridge #242']} />
      </group>
    </group>
  )
}

useGLTF.preload('/upload_bridge.glb')
